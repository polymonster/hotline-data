import debug.pmfx
{
    include: [
        "tests.hlsl"
        "debug.hlsl"
    ]
    textures: {
        compute_texture3d: {
            width: 64,
            height: 64,
            depth: 64,
            usage: [UnorderedAccess, ShaderResource]
        }
    }
    views: {
        missing_camera_view: {
            render_target: [
                "main_colour"
            ]
            clear_colour: [0.45, 0.55, 0.60, 1.0]
            depth_stencil: [
                "main_depth"
            ]
            clear_depth: 1.0
            viewport: [0.0, 0.0, 1.0, 1.0, 0.0, 1.0]
            camera: "missing"
        }
    }
    render_target_blend_states: {
        subtract: {
            blend_enabled: true
            src_blend: SrcColour
            dst_blend: DstColour
            blend_op: Subtract
        }
        rev_subtract: {
            blend_enabled: true
            src_blend: One
            dst_blend: One
            blend_op: RevSubtract
        }
        min: {
            blend_enabled: true
            src_blend: One
            dst_blend: One
            blend_op: Min
        }
        max: {
            blend_enabled: true
            src_blend: One
            dst_blend: One
            blend_op: Max
        }
        add_colour: {
            blend_enabled: true
            src_blend: SrcColour
            dst_blend: DstColour
            blend_op: Add
        }
        add_constant: {
            blend_enabled: true
            src_blend: SrcColour
            dst_blend: One
            blend_op: Add
        }
        max_colour: {
            blend_enabled: true
            src_blend: SrcColour
            dst_blend: DstColour
            blend_op: Max
        }
    }
    pipelines: {
        cubemap_test(mesh_debug): {
            vs: vs_mesh
            ps: ps_cubemap
            static_samplers: {
                sampler_wrap_linear: wrap_linear
            }
            push_constants: [
                "view_push_constants"
                "draw_push_constants"
            ]
        }
        texture2d_array_test(cubemap_test): {
            ps: ps_texture2d_array
        }
        texture3d_test(cubemap_test): {
            vs: vs_texture3d
            ps: ps_volume_texture_ray_march_sdf
            raster_state: cull_none
        }
        volume_ray_march(cubemap_test): {
            vs: vs_texture3d
            ps: ps_volume_texture_ray_march
            static_samplers: {
                sampler_wrap_linear: clamp_point
            }
            raster_state: cull_none
        }
        cull_none(mesh_debug): {
            raster_state: cull_none
        }
        cull_front(cull_none): {
            raster_state: cull_front
        }
        cull_back(cull_none): {
            raster_state: cull_back
        }
        blend_disabled(cull_none): {
            vs: vs_mesh
            ps: ps_constant_colour
            blend_state: disabled
            push_constants: [
                "view_push_constants"
                "draw_push_constants"
            ]
        }
        blend_additive(blend_disabled): {
            blend_state: additive
        }
        blend_alpha(blend_disabled): {
            blend_state: alpha
        }
        blend_subtract(blend_disabled): {
            blend_state: subtract
        }
        blend_rev_subtract(blend_disabled): {
            blend_state: rev_subtract
        }
        blend_min(blend_disabled): {
            blend_state: min
        }
        blend_max(blend_disabled): {
            blend_state: max
        }
        blend_max_colour(blend_disabled): {
            blend_state: max_colour
        }
        blend_add_constant(blend_disabled): {
            blend_state: add_constant
        }
        compute_write_texture3d: {
            cs: cs_write_texture3d
            push_constants: cbuffer_resource_indices
        }
    }
    render_graphs: {
        mesh_draw: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            meshes: {
                view: "main_view_no_clear"
                pipelines: ["mesh_debug"]
                function: "draw_meshes"
                depends_on: ["grid"]
            }
        }
        mesh_draw_indirect: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            meshes: {
                view: "main_view_no_clear"
                pipelines: ["mesh_debug"]
                function: "draw_meshes_indirect"
                depends_on: ["grid"]
            }
            wireframe: {
                view: "main_view_no_clear"
                pipelines: ["wireframe_overlay"]
                function: "render_meshes"
                depends_on: ["meshes", "grid"]
            }
        }
        raster_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            raster_meshes: {
                view: "main_view_no_clear"
                pipelines: ["cull_none", "cull_front", "cull_back", "wireframe_overlay"]
                function: "render_meshes_pipeline"
                depends_on: ["grid"]
            }
        }
        blend_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            blend_meshes: {
                view: "main_view_no_clear"
                pipelines: [
                    "cull_back"
                    "blend_disabled"
                    "blend_additive"
                    "blend_alpha"
                    "blend_subtract"
                    "blend_rev_subtract"
                    "blend_min"
                    "blend_max"
                ]
                function: "render_meshes_pipeline_coloured"
                depends_on: ["grid"]
            }
        }
        cubemap_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            sphere_meshes: {
                view: "main_view_no_clear"
                pipelines: [
                    "cubemap_test"
                ]
                function: "render_meshes_cubemap_test"
                depends_on: ["grid"]
            }
        }
        texture2d_array_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            billboard_meshes: {
                view: "main_view_no_clear"
                pipelines: [
                    "texture2d_array_test"
                ]
                function: "render_meshes_texture2d_array_test"
                depends_on: ["grid"]
            }
        }
        texture3d_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            sdf_meshes: {
                view: "main_view_no_clear"
                pipelines: [
                    "texture3d_test"
                ]
                function: "render_meshes_texture3d_test"
                depends_on: ["grid"]
            }
        }
        compute_test: {
            grid: {
                view: "main_view"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
            write_texture: {
                function: "dispatch_compute"
                pipelines: ["compute_write_texture3d"]
                uses: [
                    "compute_texture3d"
                ]
                compute_target: "compute_texture3d"
                thread_count: [8, 8, 8]
            }
            sdf_meshes: {
                view: "main_view_no_clear"
                pipelines: [
                    "volume_ray_march"
                ]
                function: "render_meshes_texture3d_test"
                depends_on: ["grid"]
            }
        }
        missing_view: {
            missing_view: {
                view: "missing"
                pipelines: ["imdraw_3d"]
                function: "render_grid"
            }
        }
        missing_function: {
            meshes: {
                view: "main_view_no_clear"
                pipelines: ["mesh_debug"]
                function: "missing"
            }
        }
        failing_pipeline: {
            failing_pipeline: {
                view: "main_view"
                pipelines: ["missing"]
                function: "render_grid"
            }
        }
        missing_pipeline: {
            missing_pipeline: {
                view: "main_view"
                pipelines: ["mesh_debug"]
                function: "render_missing_pipeline"
            }
        }
        missing_camera: {
            missing_camera: {
                view: "missing_camera_view"
                pipelines: ["mesh_debug"]
                function: "render_missing_camera"
            }
        }
    }
}
